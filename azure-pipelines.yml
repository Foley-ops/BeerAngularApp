
trigger:
- dev

pool:
  name: Azure Pipelines
stages:

- stage: Linter
  displayName: Lint Dockerfile
  jobs:  
  - job: Linter
    displayName: Lint Dockerfile
    steps:
    - task: CmdLine@2
      displayName: hadolint
      continueOnError: true
      inputs:
        script: 'docker run --rm -i hadolint/hadolint:latest-alpine < Dockerfile'

- stage: Build
  displayName: Build and publish
  jobs:
  - job: Build
    steps:
    - task: Docker@0
      displayName: 'Build an image'
      inputs:
        azureSubscription: 'Azure for Students(2a5141e6-54fb-4506-b600-4eded22b4219)'
        azureContainerRegistry: '{"loginServer":"nfoley.azurecr.io", "id" : "/subscriptions/2a5141e6-54fb-4506-b600-4eded22b4219/resourceGroups/angular-demo/providers/Microsoft.ContainerRegistry/registries/nfoley"}'
        dockerFile: Dockerfile
        imageName: 'dev-image-$(Build.Repository.Name):$(Build.BuildId)'
    - task: Docker@0
      displayName: 'Push an image'
      inputs:
        azureSubscription: 'Azure for Students(2a5141e6-54fb-4506-b600-4eded22b4219)'
        azureContainerRegistry: '{"loginServer":"nfoley.azurecr.io", "id" : "/subscriptions/2a5141e6-54fb-4506-b600-4eded22b4219/resourceGroups/angular-demo/providers/Microsoft.ContainerRegistry/registries/nfoley"}'
        action: 'Push an image'
        imageName: 'dev-image-$(Build.Repository.Name):$(Build.BuildId)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: dev_artifact'
      inputs:
        PathtoPublish: Dockerfile
        ArtifactName: 'dev_artifact'
